---

---

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Spicy Stuff</title>
    <style>
        header {
            text-align: center;
            padding: 20px;
            background-color: rgba(204, 102, 102, 0.8);
            box-sizing: border-box;
        }

        body {
            background-color: #CC6644; /* Spicy red pepper color */
            background-image: url("images/spice-background.jpg");
            color: #880000; /* White text for contrast */
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 10px;
            box-sizing: border-box;
        }

        main {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            background-color: rgba(255, 255, 255, 0.8); /* Semi-transparent white background */
            border-radius: 10px;
        }

        h2 {
            color: #FF6347; /* Spicy red pepper color for heading */
        }

        p {
            line-height: 1.5;
        }
    </style>
</head>

<body>
    <header>
        <h1><div id="colorChange"><i><b>Spicy Stuff</b></i></div></h1>
        <p><i>Your Ultimate Guide to All Things Hot Sauce</i></p>
    </header>

    <main>
        <section>
            <h2>Introduction to Hot Sauce</h2>
            <p>Welcome to Spicy Stuff! Explore the world of hot sauce with us and discover the flavors, heat levels, and culinary wonders of spicy condiments.</p>
        </section>

        <section>
            <h2>Hot Sauce Reviews</h2>
            <p>Discover the hottest sauces on the market. We provide honest reviews and recommendations to help you navigate the vast world of spicy condiments.</p>
            <ul>
              <li><a href="sriracha.html">Sriracha</a></li>
              <li><a href="tabasco.html">Tabasco</a></li>
              <li><a href="cholula.html">Cholula</a></li>
              <li><a href="franks.html">Frank's</a></li>
              <li><a href="valentina.html">Valentina</a></li>
            </ul>
        </section>

        <section>
            <h2>Recipes</h2>
            <p>Spice up your meals with our curated collection of hot sauce-infused recipes. From appetizers to desserts, we've got your cravings covered.</p>
        </section>
    </main>
    (c) <a href="https://www.freepik.com/free-photo/top-view-bowl-cherry-tomates-hot-red-peppers-wooden-spoon-bay-leaves-bowls-ketchup-hot-pepper-powder-tomato-black-ground_14405281.htm#fromView=search&page=1&position=23&uuid=8d06adb7-d1bb-4449-8f5b-ecc5706adba1">Image by KamranAydinov on Freepik</a>

</body>

<script>
  // Function to convert hex color to RGB array
  function hexToRgb(string hexColorStr) {
    return [
      parseInt(hexColorStr.substring(1, 3), 16),
      parseInt(hexColorStr.substring(3, 5), 16),
      parseInt(hexColorStr.substring(5, 7), 16),
    ];
  }

  // Function to interpolate between two colors,
  // returns string formatted like "#000000" 
  function interpolateColor(string color1, string color2, float fraction) {
    const startRGB = hexToRgb(color1);
    const endRGB = hexToRgb(color2);
    const resultRGB = [];

    // Calculate for Red, Green, and Blue
    for (let i = 0; i < 3; i++) {
      resultRGB.push(Math.floor(startRGB[i] + fraction * (endRGB[i] - startRGB[i])));
    }
    return "#" + resultRGB.map((c) => c.toString(16).padStart(2, '0')).join("");
  }

  function changeColor() {
    const colorChangeDiv = document.getElementById('colorChange');
    if (!colorChangeDiv) {
       console.log("Missing colorChange div");
       return;
    }
    var startColor = "000000";
    var endColor = "FF3333";
    const colorSteps = 10;
    const stepDuration = 200;
    var currentStep = 0;

    // Function to change the color gradually
    function changeColorStep() {
      if (currentStep > colorSteps) {
        // clearInterval(intervalId);
        currentStep = 0;
        const tmpColor = startColor;
        startColor = endColor;
        endColor = tmpColor;
        return;
      }
      const currentColor = interpolateColor(startColor, endColor, currentStep / colorSteps);
      // console.log("Changed to ", currentColor, currentStep);
      currentStep++;
      colorChangeDiv.style.color = currentColor;
    }
    // Kick it off
    // const intervalId =
    setInterval(changeColorStep, stepDuration);
    // console.log("Starting with interval id", intervalId);
  }

  changeColor();
  
</script>

</html>
